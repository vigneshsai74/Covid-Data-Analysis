<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20214.21.1217.2252                               -->
<workbook original-version='18.1' source-build='2021.4.2 (20214.21.1217.2252)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sheet1 (Tableau table 1)' inline='true' name='federated.0qz9jz20g31kmc16lgkoh1fhuv4c' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau table 1' name='excel-direct.1dl3vlx0xhzpuv16h2zy00dflg6a'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/data analyst/Tableau table 1.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1dl3vlx0xhzpuv16h2zy00dflg6a' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1dl3vlx0xhzpuv16h2zy00dflg6a' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_B528A800A0F447619B36EC095B843F9B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_B528A800A0F447619B36EC095B843F9B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DeathPercentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>DeathPercentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_B528A800A0F447619B36EC095B843F9B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_B528A800A0F447619B36EC095B843F9B]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_B528A800A0F447619B36EC095B843F9B'>
            <properties context=''>
              <relation connection='excel-direct.1dl3vlx0xhzpuv16h2zy00dflg6a' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='total_cases' ordinal='0' />
                  <column datatype='integer' name='total_deaths' ordinal='1' />
                  <column datatype='real' name='DeathPercentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau table 2)' inline='true' name='federated.0xc52gv0pe22ly125rtx40oaguap' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau table 2' name='excel-direct.0237d2v11mf2zp10as99o1xij6qh'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/data analyst/Tableau table 2.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0237d2v11mf2zp10as99o1xij6qh' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B11:no:A1:B11:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0237d2v11mf2zp10as99o1xij6qh' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B11:no:A1:B11:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B11:no:A1:B11:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_940C1CA35C61497BA067D46886534CAF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeathCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeathCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>TotalDeathCount</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_940C1CA35C61497BA067D46886534CAF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_940C1CA35C61497BA067D46886534CAF]' role='measure' type='quantitative' />
      <column caption='Continents' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_940C1CA35C61497BA067D46886534CAF'>
            <properties context=''>
              <relation connection='excel-direct.0237d2v11mf2zp10as99o1xij6qh' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:B11:no:A1:B11:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='TotalDeathCount' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau table 3)' inline='true' name='federated.175sjf70tss86y1fpayyg02dkaum' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau table 3' name='excel-direct.0zsmbwn160isap1epa16b0dn3i1y'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/data analyst/Tableau table 3.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0zsmbwn160isap1epa16b0dn3i1y' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D239:no:A1:D239:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0zsmbwn160isap1epa16b0dn3i1y' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D239:no:A1:D239:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D239:no:A1:D239:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_5A809CD8200540D3A86AF37E49F7A08E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_5A809CD8200540D3A86AF37E49F7A08E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_5A809CD8200540D3A86AF37E49F7A08E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_5A809CD8200540D3A86AF37E49F7A08E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_5A809CD8200540D3A86AF37E49F7A08E]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_5A809CD8200540D3A86AF37E49F7A08E'>
            <properties context=''>
              <relation connection='excel-direct.0zsmbwn160isap1epa16b0dn3i1y' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:D239:no:A1:D239:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau table 4)' inline='true' name='federated.1wiohcc14ty9o61ezz7vj1j8ckkt' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau table 4' name='excel-direct.1i22kp80kkqkrl1bsq26r08ibs9o'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/data analyst/Tableau table 4.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1i22kp80kkqkrl1bsq26r08ibs9o' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1i22kp80kkqkrl1bsq26r08ibs9o' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_98F9A634CA5D49A392981AF8A71251B6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_98F9A634CA5D49A392981AF8A71251B6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_98F9A634CA5D49A392981AF8A71251B6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_98F9A634CA5D49A392981AF8A71251B6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_98F9A634CA5D49A392981AF8A71251B6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_98F9A634CA5D49A392981AF8A71251B6]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lower middle income&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Upper middle income&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;High income&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Low income&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_98F9A634CA5D49A392981AF8A71251B6'>
            <properties context=''>
              <relation connection='excel-direct.1i22kp80kkqkrl1bsq26r08ibs9o' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Covid Deaths</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau table 1)' name='federated.0qz9jz20g31kmc16lgkoh1fhuv4c' />
          </datasources>
          <datasource-dependencies datasource='federated.0qz9jz20g31kmc16lgkoh1fhuv4c'>
            <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
            <column-instance column='[DeathPercentage]' derivation='Sum' name='[sum:DeathPercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0qz9jz20g31kmc16lgkoh1fhuv4c].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qz9jz20g31kmc16lgkoh1fhuv4c].[sum:DeathPercentage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qz9jz20g31kmc16lgkoh1fhuv4c].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qz9jz20g31kmc16lgkoh1fhuv4c].[sum:total_deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0qz9jz20g31kmc16lgkoh1fhuv4c].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0qz9jz20g31kmc16lgkoh1fhuv4c].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.0qz9jz20g31kmc16lgkoh1fhuv4c].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.0qz9jz20g31kmc16lgkoh1fhuv4c].[sum:DeathPercentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0qz9jz20g31kmc16lgkoh1fhuv4c].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0qz9jz20g31kmc16lgkoh1fhuv4c].[:Measure Names]' value='174' />
            <format attr='height' value='39' />
            <format attr='color' value='#000000' />
            <format attr='text-format' field='[federated.0qz9jz20g31kmc16lgkoh1fhuv4c].[sum:DeathPercentage:qk]' value='n#,##0.000;-#,##0.000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' scope='cols' value='#f9e9e0' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#f0f7fa' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-color' value='#76b7b2' />
            <format attr='stroke-size' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0qz9jz20g31kmc16lgkoh1fhuv4c].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='2.3756906986236572' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0qz9jz20g31kmc16lgkoh1fhuv4c].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{A0975E6A-3801-4640-B1A5-673BDD89F7DC}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Death Count Per Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau table 2)' name='federated.0xc52gv0pe22ly125rtx40oaguap' />
          </datasources>
          <datasource-dependencies datasource='federated.0xc52gv0pe22ly125rtx40oaguap'>
            <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
            <column caption='Continents' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeathCount]' derivation='Sum' name='[sum:TotalDeathCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xc52gv0pe22ly125rtx40oaguap].[none:location:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:location:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:location:nk]' member='&quot;High income&quot;' />
                <groupfilter function='member' level='[none:location:nk]' member='&quot;Low income&quot;' />
                <groupfilter function='member' level='[none:location:nk]' member='&quot;Lower middle income&quot;' />
                <groupfilter function='member' level='[none:location:nk]' member='&quot;Upper middle income&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <alphabetic-sort column='[federated.0xc52gv0pe22ly125rtx40oaguap].[none:location:nk]' direction='ASC' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0xc52gv0pe22ly125rtx40oaguap].[none:location:nk]' value='113' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xc52gv0pe22ly125rtx40oaguap].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ffbe7d' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xc52gv0pe22ly125rtx40oaguap].[sum:TotalDeathCount:qk]</rows>
        <cols>[federated.0xc52gv0pe22ly125rtx40oaguap].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{9BF5CCD6-8EE7-46E6-95AD-D7D9B440AB35}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percentage of Population Infected</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau table 3)' name='federated.175sjf70tss86y1fpayyg02dkaum' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.175sjf70tss86y1fpayyg02dkaum'>
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' name='[sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.175sjf70tss86y1fpayyg02dkaum].[Longitude (generated)]' field-type='quantitative' max='24204691.201494228' min='-21121298.365030698' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.175sjf70tss86y1fpayyg02dkaum].[Latitude (generated)]' field-type='quantitative' max='18790662.933330845' min='-7351865.2270051893' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.175sjf70tss86y1fpayyg02dkaum].[sum:PercentPopulationInfected:qk]' palette='green_blue_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.175sjf70tss86y1fpayyg02dkaum].[sum:PercentPopulationInfected:qk]' value='Percent Population Infected'>
              <formatted-text>
                <run>Percent Population Infected</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='streets' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.175sjf70tss86y1fpayyg02dkaum].[none:Location:nk]' />
              <color column='[federated.175sjf70tss86y1fpayyg02dkaum].[sum:PercentPopulationInfected:qk]' />
              <geometry column='[federated.175sjf70tss86y1fpayyg02dkaum].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.175sjf70tss86y1fpayyg02dkaum].[Latitude (generated)]</rows>
        <cols>[federated.175sjf70tss86y1fpayyg02dkaum].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{D7CB2B22-E77B-4744-85BE-A9EB6E2F9976}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percentage of Population Infected</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau table 4)' name='federated.1wiohcc14ty9o61ezz7vj1j8ckkt' />
          </datasources>
          <datasource-dependencies datasource='federated.1wiohcc14ty9o61ezz7vj1j8ckkt'>
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' name='[avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' forecast-column-base='[avg:PercentPopulationInfected:qk]' forecast-column-type='forecast-value' name='[fVal:avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1wiohcc14ty9o61ezz7vj1j8ckkt].[none:Location:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Russia&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Spain&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1wiohcc14ty9o61ezz7vj1j8ckkt].[none:Location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1wiohcc14ty9o61ezz7vj1j8ckkt].[tmn:date:qk]' scope='cols' value='Month' />
          </style-rule>
          <style-rule element='tooltip'>
            <format attr='color' value='#e799b3' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1wiohcc14ty9o61ezz7vj1j8ckkt].[none:Location:nk]' />
              <text column='[federated.1wiohcc14ty9o61ezz7vj1j8ckkt].[none:Location:nk]' />
              <color column='[federated.1wiohcc14ty9o61ezz7vj1j8ckkt].[none:Forecast Indicator:nk]' />
              <text column='[federated.1wiohcc14ty9o61ezz7vj1j8ckkt].[fVal:avg:PercentPopulationInfected:qk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1wiohcc14ty9o61ezz7vj1j8ckkt].[fVal:avg:PercentPopulationInfected:qk]</rows>
        <cols>[federated.1wiohcc14ty9o61ezz7vj1j8ckkt].[tmn:date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{DC54F5C3-2D07-436B-A8DD-8F2265DAC681}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='60517' id='8' param='horz' type-v2='layout-flow' w='99034' x='483' y='940'>
            <zone h='60517' id='6' type-v2='layout-basic' w='99034' x='483' y='940'>
              <zone h='30258' id='3' name='Sheet 1' w='49517' x='483' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='30259' id='5' name='Sheet 2' w='38817' x='483' y='31198'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='60517' id='10' name='Sheet 3' w='41370' x='50000' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='30259' id='9' name='Sheet 2' pane-specification-id='0' param='[federated.0xc52gv0pe22ly125rtx40oaguap].[none:location:nk]' type-v2='color' w='10700' x='39300' y='31198'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='60517' id='11' name='Sheet 3' pane-specification-id='0' param='[federated.175sjf70tss86y1fpayyg02dkaum].[sum:PercentPopulationInfected:qk]' type-v2='color' w='8147' x='91370' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='37603' id='12' name='Sheet 4' w='86240' x='483' y='61457'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='37603' id='13' name='Sheet 4' pane-specification-id='0' param='[federated.1wiohcc14ty9o61ezz7vj1j8ckkt].[none:Location:nk]&#10;[federated.1wiohcc14ty9o61ezz7vj1j8ckkt].[none:Forecast Indicator:nk]' type-v2='color' w='12794' x='86723' y='61457'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1300' minheight='1300' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='15' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98120' id='14' param='vert' type-v2='layout-flow' w='99034' x='483' y='940'>
                <zone fixed-size='234' h='30258' id='3' is-fixed='true' name='Sheet 1' w='49517' x='483' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='60517' id='10' is-fixed='true' name='Sheet 3' w='41370' x='50000' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='60517' id='11' name='Sheet 3' pane-specification-id='0' param='[federated.175sjf70tss86y1fpayyg02dkaum].[sum:PercentPopulationInfected:qk]' type-v2='color' w='8147' x='91370' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='234' h='30259' id='5' is-fixed='true' name='Sheet 2' w='38817' x='483' y='31198'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='30259' id='9' name='Sheet 2' pane-specification-id='0' param='[federated.0xc52gv0pe22ly125rtx40oaguap].[none:location:nk]' type-v2='color' w='10700' x='39300' y='31198'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37603' id='12' is-fixed='true' name='Sheet 4' w='86240' x='483' y='61457'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='37603' id='13' name='Sheet 4' pane-specification-id='0' param='[federated.1wiohcc14ty9o61ezz7vj1j8ckkt].[none:Location:nk]&#10;[federated.1wiohcc14ty9o61ezz7vj1j8ckkt].[none:Forecast Indicator:nk]' type-v2='color' w='12794' x='86723' y='61457'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{05809A90-6AC3-4A73-AA64-B22A12535611}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='115'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0qz9jz20g31kmc16lgkoh1fhuv4c].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9DF3C893-FF7C-4AB2-81FA-BA1C03C62688}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0xc52gv0pe22ly125rtx40oaguap].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.0xc52gv0pe22ly125rtx40oaguap].[sum:TotalDeathCount:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0xc52gv0pe22ly125rtx40oaguap].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{37D8F16D-B0EB-41C7-91FD-DE7C38BCA59A}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.175sjf70tss86y1fpayyg02dkaum].[sum:PercentPopulationInfected:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.175sjf70tss86y1fpayyg02dkaum].[none:Location:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{967C5C9A-4B52-4C33-B36C-90CB35C5E230}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1wiohcc14ty9o61ezz7vj1j8ckkt].[none:Location:nk]&#10;[federated.1wiohcc14ty9o61ezz7vj1j8ckkt].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wiohcc14ty9o61ezz7vj1j8ckkt].[none:Forecast Indicator:nk]</field>
            <field>[federated.1wiohcc14ty9o61ezz7vj1j8ckkt].[none:Location:nk]</field>
            <field>[federated.1wiohcc14ty9o61ezz7vj1j8ckkt].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{93F08464-68E8-4845-B9E1-87D36C84D63F}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0xc52gv0pe22ly125rtx40oaguap].[none:location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1wiohcc14ty9o61ezz7vj1j8ckkt].[none:Forecast Indicator:nk]</field>
              <field>[federated.1wiohcc14ty9o61ezz7vj1j8ckkt].[none:Location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{E305E851-28F9-4976-B6C5-D01B70A0C965}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      1N+P4zhUKhUUVaVaqWDWasiyzOXPPuXiW28BcO3ql5w5ew5ZltH1MuVSiQMHD/Lu93/Indu3
      CIXC+Hw+pqemCIfDSJLE0uLO9FRJEgSCQRzbZm11lXK5TLFQZGJ8nNH798lmMpw8dYq+/n70
      ss6Pf/YHNDQ2cbCvD10vMzUxSV9/P4ePDDA7M83P/uAPGTh2jLb2dsqlEolkEk3TsO2X27FQ
      qVQoFgtEwmGam1vIZjNUKhXefuddbNvGsl6fjo/dQPnFL37xi98fGM8w80TXdQqFPMtLi3i9
      PhYWFlhaXODim29RM03q6xuIRqPcunmTXC7LydNnuHH9K86cO08gEMDr9dLQ0LgRX7VKT+8B
      hBD8i7/4Cw4eOsStmzcplUqcu3CB+dlZJsbHefOtS+i6zp3btzh67DixeJx8tULM5//WD25Z
      Frdu3kDzemlra+e3v/mQ7//wR3R0dtLW3o6iKtweGsLn83Oov5+hGzdQZJmBY8f4F//PX/Dj
      n/6M2ZkZctkMFy6+ydjYKMvLy7z51iXa2tsZunGdQ4ePkEzWkTeqL2Tr83LzxnWq1SrlUoma
      YRAKh/D5A4yN3ufiW2+TSacZuXePg319SEiM3LtLpaKTSCQIBAJo6v7pG9m1blBd1/H7/c9U
      tDqOg2EY+P3Pnkl2smuxVqshSxKqx/PUe1+2rbvNfusGfeRJLdPc7r7nRvN4sJ+jePWo6nPF
      L2x7x+yVH4j0WcN7mbbuOorMHrmIvRI8UgIYhvG0+12+48iyjPYKjlrvFu6USJd9zf5p7bi4
      bIErAJd9jSsAl32NKwCXfY0rAJd9jSsAl32NKwCXfY0rAJd9jSsAl32NKwCXfY0rAJd9jSsA
      l32NKwCXfY0rAJd9jSsAl32NKwCXfY0rAJd9jSsAl32NKwCXfY0rAJd9jSsAl32NKwCXfY0r
      AJd9jSsAl32NKwCXfY0rAJd9jSsAl32NKwCXfY0rAJd9jSsAl32NKwCXfY0rAJd9jSsAl32N
      KwCXfY0rAJd9jSsAl32NKwCXVwbHqjFybwRzmw3bC5l1DOvpm7k/D+4ukS6vDB/96j1OvPE9
      LD3D2OQCHa0NLKXWiUQCfPThV7x19jBSOEy1XKSptZvl2QlaWtuYnl8mEQvzye9+x8//6A+Y
      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
      5yVnKSsTDAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='63' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      C8e/YQNBr8Cc838AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
